/*  题目描述：
    给你一根长度为 n 的绳子，请把绳子剪成整数长度的 m 段（m、n都是整数，n>1并且m>1），每段绳子的长度记为 k[0],k[1]...k[m - 1] 。请问 k[0]*k[1]*...*k[m - 1] 可能的最大乘积是多少？例如，当绳子的长度是8时，我们把它剪成长度分别为2、3、3的三段，此时得到的最大乘积是18。答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。
    不同点：数据的范围特别大了！如何处理呢？
    由于DP需要枚举各个结果然后取最大值，有大数越界了，所以用贪心算法
*/

/*  考虑最终切分的长度：
    1：不可，k-1 * 1 < k
    2：可以
    3：可以
    4：拆成2
    5：拆成2 3 
    n>=5,优先拆成3，3*(n-3)>2*(n-2) 
*/
//模拟剪绳子 100 100
class Solution {
    public int cuttingRope(int n) {
        if(n<=3) return n-1;
        long res=1;
        while(n>4){ //
            res *=3;
            res =res%1000000007; //就是多取一个模
            n-=3;
        }
        return (int)(res*n%1000000007);

    }
}